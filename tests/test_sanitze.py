"""Test functions for the _sanitize_file module."""
import pytest
import pathlib

from repobee_sanitizer import _sanitize, _syntax

import testhelpers

(
    VALID_TEST_CASE_ARGS,
    VALID_TEST_CASE_IDS,
) = testhelpers.generate_valid_test_cases()
(
    INVALID_TEST_CASE_ARGS,
    INVALID_TEST_CASE_IDS,
) = testhelpers.generate_invalid_test_cases()


@pytest.mark.parametrize(
    "abs_path", INVALID_TEST_CASE_ARGS, ids=INVALID_TEST_CASE_IDS
)
def test_sanitize_invalid(abs_path: pathlib.Path):
    assert _syntax.check_syntax(abs_path.read_text().split("\n"))


@pytest.mark.parametrize(
    "inp,expected", VALID_TEST_CASE_ARGS, ids=VALID_TEST_CASE_IDS
)
def test_sanitize_valid(inp: str, expected: str):
    """Test sanitizing valid cases with predefined expected outputs. Input
    for this test function is generated by the pytest_generate_tests
    hook.
    """
    assert _sanitize.sanitize_text(inp) == expected
